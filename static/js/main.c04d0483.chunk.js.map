{"version":3,"sources":["components/FilteredTeams.jsx","components/Home.jsx","components/Team.jsx","App.js","serviceWorker.js","index.js"],"names":["FilteredLeagues","state","teams","englishPremierLeague","germanBundesliga","italianSerieA","frenchLigue1","spanishLaLiga","americanMLS","search","theTeam","flatTeams","addTeams","includes","push","searchForTeam","e","preventDefault","newTeamArray","flat","Infinity","setState","target","value","filteredTeams","filter","eachTeam","strTeam","toLowerCase","viewableTeams","showTeams","undefined","map","i","className","to","idTeam","key","toUpperCase","src","strTeamBadge","height","width","strLeague","epl","console","log","axios","get","then","data","gbl","ita","fl1","esp","mls","this","length","correctTeamArray","concat","type","placeholder","name","onChange","Component","Home","Date","Team","teamName","getTeamData","teamData","teamLeague","teamStadium","strStadium","teamStadiumLocation","strStadiumLocation","teamAltName","strAlternate","teamSocial","instagram","strInstagram","facebook","strFacebook","twitter","strTwitter","teamWebsite","strWebsite","teamDescription","strDescriptionEN","teamBadge","teamShort","strTeamShort","path","props","match","params","id","team","App","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c04d0483.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport './FilteredTeams.css'\n\nexport default class FilteredLeagues extends Component {\n\n  state={\n    teams: [],\n    englishPremierLeague:  null,\n    germanBundesliga: null,\n    italianSerieA: null,\n    frenchLigue1: null,\n    spanishLaLiga: null,\n    americanMLS: null,   \n    search: null,\n    theTeam: [],\n    flatTeams: []\n  }\n  \n\ncomponentDidMount(){\n  const epl = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=English_Premier_League`;\n      console.log(epl);\n      axios.get(epl).then(eachTeam => {\n        this.setState({\n          englishPremierLeague: eachTeam.data.teams\n        });\n      });\n  const gbl = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=German_Bundesliga`;\n      console.log(gbl);\n      axios.get(gbl).then(eachTeam => {\n        this.setState({\n          germanBundesliga: eachTeam.data.teams\n        });\n      });\n  const ita = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=Italian_Serie_A`;\n      console.log(ita);\n      axios.get(ita).then(eachTeam => {\n        this.setState({\n          italianSerieA: eachTeam.data.teams\n        });\n      });\n  const fl1 = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=French_Ligue_1`;\n      console.log(fl1);\n      axios.get(fl1).then(eachTeam => {\n        this.setState({\n          frenchLigue1: eachTeam.data.teams\n        });\n      });\n  const esp = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=Spanish_La_Liga`;\n      console.log(esp);\n      axios.get(esp).then(eachTeam => {\n        this.setState({\n          spanishLaLiga: eachTeam.data.teams\n        });\n      });\n  const mls = `https://www.thesportsdb.com/api/v1/json/1/search_all_teams.php?l=American_Major_League_Soccer`;\n      console.log(mls);\n      axios.get(mls).then(eachTeam => {\n        this.setState({\n          americanMLS: eachTeam.data.teams\n        });\n      });\n\n  \n\n     \n}\n\naddTeams = ()=> {\n  if (this.state.englishPremierLeague !== null && !this.state.teams.includes(this.state.englishPremierLeague)){\n    this.state.teams.push(this.state.englishPremierLeague)\n  }\n  if (this.state.germanBundesliga !== null &&  !this.state.teams.includes(this.state.germanBundesliga)){\n    this.state.teams.push(this.state.germanBundesliga)\n  }\n  if (this.state.italianSerieA !== null && !this.state.teams.includes(this.state.italianSerieA)){\n    this.state.teams.push(this.state.italianSerieA)\n  }\n  if (this.state.frenchLigue1 !== null &&  !this.state.teams.includes(this.state.frenchLigue1)){\n    this.state.teams.push(this.state.frenchLigue1)\n  }\n  if (this.state.americanMLS !== null &&  !this.state.teams.includes(this.state.americanMLS)){\n    this.state.teams.push(this.state.americanMLS)\n  }\n  if (this.state.spanishLaLiga !== null &&  !this.state.teams.includes(this.state.spanishLaLiga)) {\n    this.state.teams.push(this.state.spanishLaLiga)\n  } else {\n    return false\n  }\n//  console.log(this.state.teams)\n}\n\n\nsearchForTeam = (e) => {\n  e.preventDefault()\n  let newTeamArray = this.state.teams.flat(Infinity)\n  this.setState({ \n    'search': e.target.value,\n    flatTeams: newTeamArray\n});\n  let filteredTeams = this.state.flatTeams.filter(eachTeam =>{\n    // console.log(eachTeam)\n    return eachTeam.strTeam.toLowerCase().includes(e.target.value.toLowerCase())\n  })\n    this.setState({\n      viewableTeams: filteredTeams\n    })\n};\n\nshowTeams = () => {\n  if (this.state.viewableTeams !== undefined){\n\n    return this.state.viewableTeams.map((theTeam, i) => {\n      return (\n        <div>\n        <ul className='teamList'>\n\n            <Link to={`/team/${theTeam.idTeam}`} className='link' >\n          <li key={i} className=\"teamListItem\">\n                <h1 className='teamName'>{theTeam.strTeam.toUpperCase()}</h1> \n                <img className='teamBadge' src={theTeam.strTeamBadge} height='70px' width='70px'></img>\n              <div className='teamLeague'>\n                {theTeam.strLeague}\n              </div>\n          </li> \n            </Link>\n        </ul>\n      </div>\n      \n    );\n  });\n}\n};\n\n      \n\n\n// setSearch = (e) => {\n//   this.setState({ 'search': e.target.value });\n// }\n\n\n  render() {\n\n    if (this.state.teams.length === 5){\n\n      // console.log(this.state.teams)\n\n      let newTeamArray = this.state.teams.flat(Infinity)\n      let correctTeamArray = newTeamArray.concat(this.state.frenchLigue1)\n\n      this.setState({\n        viewableTeams: correctTeamArray\n      })\n\n    }\n\n    this.addTeams()\n    // console.log(this.state.americanMLS)\n    //  console.log(this.state)\n    \n \n    return (\n      <div className=\"App\">\n\n     <h1>Find your club</h1>  \n   \n    <input type='text' placeholder='  Search by team name' name='search' className='search' onChange={this.searchForTeam}></input>  \n      <div className='teamList'>{this.showTeams()}</div>\n    </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport FilteredLeagues from \"./FilteredTeams\"\n\nexport default class Home extends Component {\n    render() {\n        console.log('home!!!??', new Date());\n\n        return (\n            <div>\n                 {/* <h1>Fanbook</h1> */}\n        <div className='introduction'>\n        <h3>Choose Your Team,</h3>\n        <h4>stay informed with the latest team data.</h4>\n        <h3>Get invovled, </h3>\n        <h4>connect with local supporter groups.</h4>\n        <Link to='/choose-team'>Select Team</Link>\n        </div>\n            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport './Team.css'\nimport {Link} from 'react-router-dom'\n\nexport default class Team extends Component {\n\n    state= {\n        theTeam: [],\n        teamName: \"\"\n    }     \n\ncomponentDidMount(){\n    const path = `https://www.thesportsdb.com/api/v1/json/1/lookupteam.php?id=${this.props.match.params.id}`\n    axios.get(path).then(team => {\n        this.setState({\n          theTeam: team.data\n        }, () => {\n            this.getTeamData()\n        }\n        );\n      });\n}\n\ngetTeamData = () => {\n        console.log(this.state.theTeam)\n\n        let teamData = (this.state.theTeam.teams[0])\n            this.setState({\n                teamName: teamData.strTeam,\n                teamLeague: teamData.strLeague,\n                teamStadium: teamData.strStadium,\n                teamStadiumLocation: teamData.strStadiumLocation,\n                teamAltName: teamData.strAlternate,\n                teamSocial: {\n                    instagram: teamData.strInstagram,\n                    facebook: teamData.strFacebook,\n                    twitter: teamData.strTwitter,\n                },\n                teamWebsite: teamData.strWebsite,\n                teamDescription: teamData.strDescriptionEN,\n                teamBadge: teamData.strTeamBadge,\n                teamShort: teamData.strTeamShort\n            }, ()=> {\n                console.log(this.state)\n            }\n            )\n    \n}\n\n    render() {\n        // this.getTeamData()\n        return (\n            <div>\n                <h1 className='theTeamName'>{this.state.teamName} <span className='abv'>{this.state.teamShort}</span></h1>\n             \n                <img className='badge' src={this.state.teamBadge}></img>\n                <div className='teamDetails'>\n                    <div className='teamDescription'>\n                        <h3>About club:</h3>\n                        <p>{this.state.teamDescription}</p>\n                    </div>\n                    <div className='teamLocation'>\n                    <h3>{this.state.teamStadium}</h3>\n                    <h4>{this.state.teamStadiumLocation}</h4>\n                    </div>\n                    <h4>{this.state.teamAltName}</h4> \n                    <Link to={this.state.teamWebsite}>Team Website</Link>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\"\nimport FilteredLeagues from \"./components/FilteredTeams\"\nimport Team from \"./components/Team\"\n\nclass App extends Component {\n\n  render() {\n    console.log('meow?', new Date());\n    return (\n      <div className=\"App\">\n       <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/choose-team\" component={FilteredLeagues} />\n        <Route exact path=\"/team/:id\" component={Team} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n<HashRouter>\n\n<App />\n</HashRouter>,\n\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}